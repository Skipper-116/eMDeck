version: "3.8"

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - emdeck-network

  emr:
    build:
      context: ./docker/emr
    environment:
      DB_HOST: mysql
      DB_DATABASE: ${EMR_DB}
      DB_USER: ${EMR_DB_USER}
      DB_PASSWORD: ${EMR_DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - emdeck-network

  dde:
    build:
      context: ./docker/dde
    environment:
      DB_HOST: mysql
      DB_DATABASE: ${DDE_DB}
      DB_USER: ${DDE_DB_USER}
      DB_PASSWORD: ${DDE_DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - emdeck-network

  frontend:
    build:
      context: ./docker/frontend
    depends_on:
      - emr
    networks:
      - emdeck-network

  nginx:
    build:
      context: ./docker/nginx
    depends_on:
      - frontend
    ports:
      - "80:80"
    networks:
      - emdeck-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    environment:
      - ADMIN_USERNAME=${PORTAINER_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${PORTAINER_ADMIN_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - ${DOCKER_NETWORK}

networks:
  emdeck-network:
    driver: bridge

volumes:
  mysql-data:
